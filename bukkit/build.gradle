plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.1"
}

sourceCompatibility = JavaLanguageVersion.of(java_version as int)
targetCompatibility = JavaLanguageVersion.of(java_version as int)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

processResources {
    filesMatching("plugin.yml") {
        expand "version": project.version,
                "bukkit_api_version": project.bukkit_api_version
    }

    filesMatching("compatibility.properties") {
        expand "mod_compatibility_version": project.mod_compatibility_version
    }
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation "org.spigotmc:spigot-api:${bukkit_version}"

    implementation "net.kyori:adventure-api:${adventure_api_version}"
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    shadow "net.kyori:adventure-api:${adventure_api_version}"
    implementation "net.kyori:adventure-text-serializer-gson:${adventure_api_version}"
    shadow "net.kyori:adventure-text-serializer-gson:${adventure_api_version}"
    implementation "me.lucko:commodore:${commodore_version}"
    shadow "me.lucko:commodore:${commodore_version}"

    implementation "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"
    shadow "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"

    compileOnly "me.clip:placeholderapi:${placeholder_api_version}"
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"

    implementation project(':api')
    shadow project(':api')
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://papermc.io/repo/repository/maven-public/" }
    maven { url "https://libraries.minecraft.net/" }
    maven {
        name = "henkelmax.public"
        url = 'https://maven.maxhenkel.de/repository/public'
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

task copyJarToServer {
    doLast {
        delete {
            delete "${project.projectDir}/run/plugins/${archivesBaseName}-${version}.jar"
        }
        copy {
            from "${project.buildDir}/libs/${archivesBaseName}-${version}.jar"
            into "${project.projectDir}/run/plugins"
        }
    }
}

build.finalizedBy(copyJarToServer)

task runServer {
    doLast {
        javaexec {
            debug = true
            workingDir = "${project.projectDir}/run"
            main = "-jar";
            args = [
                    "${project.projectDir}/run/paper.jar",
                    "nogui"
            ]
        }
    }
}

build.dependsOn(shadowJar)
runServer.dependsOn(build)

shadowJar {
    configurations = [project.configurations.shadow]
    classifier ''
    relocate 'net.kyori', "de.maxhenkel.voicechat.net.kyori"
    relocate 'com.google.gson', "de.maxhenkel.voicechat.gson"
    relocate 'me.lucko.commodore', "de.maxhenkel.voicechat.commodore"
    relocate 'de.maxhenkel.configbuilder', "de.maxhenkel.voicechat.configbuilder"
    relocate 'co.aikar.commands', 'shadded.acf'
    relocate 'co.aikar.locales', 'shadded.locales'
    dependencies {
        exclude(dependency('com.mojang:brigadier:.*'))
        exclude(dependency('com.google.code.findbugs:jsr305:.*'))
    }
}
